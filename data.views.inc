<?php
/**
 * @file
 * Views hooks and utility functions.
 */

/**
 * Implements hook_views_data().
 *
 * Dynamically create views integration for any table Data manages.
 */
function data_views_data() {
  $data = array();
  foreach (data_get_all_tables() as $table) {
    /** @var \Drupal\data\Entity\TableConfigInterface $table */
    if (!$table->exists()) {
      continue;
    }
    $table_name = $table->id();
    $data[$table_name] = [
      'table' => [
        'group' => t('Data: @table', ['@table' => $table->label()]),
        'wizard_id' => 'data',
        'base' => [
          'field' => $table->table_schema[0]['name'],
          'title' => $table->table_schema[0]['label'],
        ],
      ],
    ];
    foreach ($table->table_schema as $column) {
      $data[$table_name][$column['name']] = [
        'field' => [
          'id' => 'data_column',
        ],
        'filter' => [
          'id' => data_get_views_handler('filter', $column['type']),
        ],
        'argument' => [
          'id' => data_get_views_handler('argument', $column['type']),
        ],
        'sort' => [
          'id' => data_get_views_handler('sort', $column['type']),
        ],
        'title' => $column['label'],
      ];
      if (!empty($table->meta['relation'][$column['name']])) {
        $base_table = $table->meta['relation'][$column['name']]['base_table'];
        $base_field = $table->meta['relation'][$column['name']]['base_field'];
        $data[$table_name][$column['name']]['relationship'] = [
          'title' => $base_table . ' ' . $base_field,
          'label' => $base_table . ' ' . $base_field,
          'group' => 'Data',
          'help' => 'Generated by Data module.',
          'id' => 'standard',
          'base' => $base_table,
          'base field' => $base_field,
          'field' => 'new_sector_id',
        ];
      }
    }
  }

  return $data;
}

/**
 * Get the handler (class name) for a specified data table field.
 *
 * @param $type string
 *   The view handler type ('filter', 'sort', 'argument').
 * @param $field_type string
 *   The field type (int, float, varchar...).
 *
 * @return
 *   String: A views handler name.
 */
function data_get_views_handler($type, $field_type) {

  switch ($type) {

    case 'filter':
      switch ($field_type) {
        case 'float':
        case 'numeric':
        case 'int':
        case 'serial':
          return 'numeric';
        case 'datetime':
          return 'date';
      }
      return 'string';

    case 'argument':
      switch ($field_type) {
        case 'int':
        case 'float':
        case 'serial':
        case 'numeric':
          return 'numeric';
        case 'datetime':
          return 'date';
      }
      return 'string';

    case 'sort':
      switch ($field_type) {
        case 'datetime':
          return 'date';
      }
      return 'standard';

  }
}

